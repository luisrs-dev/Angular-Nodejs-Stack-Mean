{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { ErrorComponent } from \"./error/error.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nexport let ErrorInterceptor = /*#__PURE__*/(() => {\n  class ErrorInterceptor {\n    constructor(dialog) {\n      this.dialog = dialog;\n    }\n    intercept(req, next) {\n      return next.handle(req).pipe(catchError(error => {\n        let errorMessage = \"An unknow error occurred!\";\n        if (error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.dialog.open(ErrorComponent, {\n          data: {\n            message: errorMessage\n          }\n        });\n        return throwError(error);\n      }));\n    }\n  }\n  ErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) {\n    return new (t || ErrorInterceptor)(i0.ɵɵinject(i1.MatDialog));\n  };\n  ErrorInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorInterceptor,\n    factory: ErrorInterceptor.ɵfac\n  });\n  return ErrorInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}